/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.britto.aspsolutions.Interfaces;

import java.awt.Color;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author britt
 */
public class interfaces extends javax.swing.JFrame {
    
    JLabel[][] vocal;
    JLabel[] word;
    boolean win;
    int iniciox [];
    int inicioy [];
    boolean direccion[];
    
    /**
     * Creates new form interfaces  
     */
    public interfaces() {
        initComponents();
        word = new JLabel[]{word1,word2,word3,word4,word5,word6,word7,word8,word9,word10}; 
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        letter_soup = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        word5 = new javax.swing.JLabel();
        word6 = new javax.swing.JLabel();
        word7 = new javax.swing.JLabel();
        word9 = new javax.swing.JLabel();
        word8 = new javax.swing.JLabel();
        word10 = new javax.swing.JLabel();
        word1 = new javax.swing.JLabel();
        word2 = new javax.swing.JLabel();
        word3 = new javax.swing.JLabel();
        word4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        letter_soup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        letter_soup.setLayout(new java.awt.GridLayout(10, 14));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel1.setText("Words");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        word5.setText("SISTEMAS");
        word5.setToolTipText("");
        word5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word5.setOpaque(true);

        word6.setText("DAVID");
        word6.setToolTipText("");
        word6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word6.setOpaque(true);

        word7.setText("BRITTO");
        word7.setToolTipText("");
        word7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word7.setOpaque(true);

        word9.setText("PHP");
        word9.setToolTipText("");
        word9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word9.setOpaque(true);

        word8.setText("SOLUTIONS");
        word8.setToolTipText("");
        word8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word8.setOpaque(true);

        word10.setText("ANGULAR");
        word10.setToolTipText("");
        word10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word10.setOpaque(true);

        word1.setText("DRAGON");
        word1.setToolTipText("");
        word1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word1.setOpaque(true);

        word2.setText("PHONE");
        word2.setToolTipText("");
        word2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word2.setOpaque(true);

        word3.setText("JAVA");
        word3.setToolTipText("");
        word3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word3.setOpaque(true);

        word4.setText("SPRING");
        word4.setToolTipText("");
        word4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        word4.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(word2)
                            .addComponent(word1)
                            .addComponent(word3)
                            .addComponent(word4)
                            .addComponent(word5)
                            .addComponent(word6)
                            .addComponent(word7)
                            .addComponent(word10))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(word9)
                            .addComponent(word8))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(word1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(word2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(word3)
                .addGap(18, 18, 18)
                .addComponent(word4)
                .addGap(18, 18, 18)
                .addComponent(word5)
                .addGap(18, 18, 18)
                .addComponent(word6)
                .addGap(18, 18, 18)
                .addComponent(word7)
                .addGap(18, 18, 18)
                .addComponent(word8)
                .addGap(18, 18, 18)
                .addComponent(word9)
                .addGap(18, 18, 18)
                .addComponent(word10)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel2.setText("Message");

        jMenu1.setText("Menu");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Restart");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(156, 156, 156))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(letter_soup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(letter_soup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void load(){
        win = false;
        iniciox = new int[10]; //Creamos el arreglo de enteros para guardar las posiciones de las palabras en x
        inicioy = new int[10]; //Creamos el arreglo de enteros para guardar las posiciones de las palabras en y
        direccion = new boolean[10]; //Para definir la dirección
        sopa();
        putWord();
       emptySpace();        
    }
    
    public void sopa(){
        
        vocal = new JLabel [10][14];
        
        for (int i = 0; i < 10; i++) {
            
            for (int j = 0; j < 14; j++) {
                
                vocal[i][j] = new JLabel("", javax.swing.SwingConstants.CENTER);// Creamos la casilla vacia y la alineamos centrada
                vocal[i][j].setName(""); // El nombre se lo setiamos vacio 
                vocal[i][j].setBackground(Color.white); //Le ponemos color negro de fondo
                vocal[i][j].setFont(new java.awt.Font("Arial", 1, 10));// tipo de letra
                vocal[i][j].setBorder(new javax.swing.border.LineBorder(Color.white)); // color del bolder
                vocal[i][j].setOpaque(true); // Para poder ver la letra
                vocal[i][j].addMouseListener(new java.awt.event.MouseAdapter() { //Le ponemos una escucha a la casilla para saber cuando le esta dando click.
                    public void mouseClicked(java.awt.event.MouseEvent evt){
                        click(evt);
                    }
                });
                letter_soup.add(vocal[i][j]);
            }
            
        }
    }
    
    
    /*
    * Checkeamos si el usuario ya gano, si no vamos a confirmar si la casilla es color negro
    * 
    */   
    public void click(java.awt.event.MouseEvent evt){
        if (!win) {
            if (evt.getComponent().getBackground().equals(Color.white)) { 
                evt.getComponent().setBackground(Color.blue);
                words();
            }else if(evt.getComponent().getName().equals("")){
                evt.getComponent().setBackground(Color.white);
            }
        }
    }
            
    
    public void words(){       
        for (int i = 0; i < 10; i++) {                        
            
            if (!word[i].getBackground().equals(Color.cyan)) {
                if (pintarVocal(iniciox[i],inicioy[i],word[i].getText().length(),direccion[i])) {
                    word[i].setBackground(Color.cyan);
                    break;
                }
            }
        }
        
        boolean won = true; // Nos ayuda a saber si el usuario ya gano e juego
        
        for (int i = 0; i < vocal.length; i++) {
            
            if (!word[i].getBackground().equals(Color.cyan)) {
                won=false;
                break;
            }
            
        }
        
        if (won) {
            JOptionPane.showMessageDialog(null, "Operación realizada correctamente");
            win = true;
        }
    }
    
    public boolean pintarVocal(int x, int y, int tamaño, boolean direccion){
        boolean respuesta = true;
        
        System.out.println("X=" + x + "; Y=" + y + "; tamaño=" + tamaño + "; dirección=" + direccion);
        
        if (direccion) {
            for (int i = y; i < tamaño+y; i++) {
                if (vocal[x][i].getBackground().equals(Color.white)) {
                    respuesta=false;
                    break;
                }
            }
        }else{
            for (int i = y; i >y-tamaño; i++) {
                if (vocal[x][i].getBackground().equals(Color.white)) {
                    respuesta=false;
                    break;
                }
            }
        }
        
        x = 0;
        y= 0;
        tamaño = 0;         
        return respuesta;
    }
    
    
    public void putWord(){
        String  wordPut[] = {word1.getText(),word2.getText(),word3.getText(),word4.getText(),word5.getText(),
        word6.getText(),word7.getText(),word8.getText(),word9.getText(),word10.getText()};        
        Random random = new Random(); // Para ubicar las palabras en diferentes lugares        
        int startx = 0; //posicion x donde inicia la palabra
        int starty; //posicion y donde inicia la palabra
        int unique[] = numerosSinRepeticiones(10);// evita que la fila se genere mas de una vez
        iniciox = unique;
        
        for (int i = 0; i < wordPut.length; i++) {
            if (wordPut[i].length() < 14) {
                startx=unique[i];
                starty= (int) (random.nextDouble() * 14-1);
                int estrae =0;
                
                if (starty+wordPut[i].length() < 14) {
                    for (int j = starty; j < starty+wordPut[i].length(); j++) {
                        vocal[startx][j].setText(wordPut[i].substring(estrae, estrae+1));
                        vocal[startx][j].setName("1");
                        estrae++;
                        inicioy[i] = starty;
                        direccion[i] = true;
                    }
                } else if (starty - wordPut[i].length() > 0) {
                    for (int j = starty; j > starty-wordPut[i].length(); j--) {
                        vocal[startx][j].setText(wordPut[i].substring(estrae, estrae+1));
                        vocal[startx][j].setName("1");
                        estrae++;
                        inicioy[i] = starty;
                        direccion[i] = false;
                    }
                }
            }
        }
    }
    
    
    
    public int[] numerosSinRepeticiones(int repetitions){
        
        int numbers[] = new int [repetitions];
        
        for (int i = 0; i < repetitions; i++) {
            numbers[i]=-1;
        }
        
        Random random = new Random();
        
        boolean aux ; // para saber si la fila esta repetida o no
        
        
        int number = 0;
        
        for (int i = 0; i < repetitions; i++) {
            
            aux = true;
            
            while(aux){
                aux = false;
                
                number = (int) (random.nextDouble()*11-1);
                
                for (int j = 0; j < numbers.length; j++) {
                    if (numbers[j] == number) {
                        aux = true;
                        break;
                    }
                }
            }
            
            numbers[i]  = number;
        }
        
        return numbers;
         
    }
            
    
    public void emptySpace(){
        //Arreglo que nos ayuda a poner las letras en la sopa
        
        String abc[] = {"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"};
        Random random = new Random();
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 14; j++) {
                if (vocal[i][j].getName().equals("")) {
                    vocal[i][j].setText(abc[(int) (random.nextDouble()*abc.length-1)]);
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaces().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel letter_soup;
    private javax.swing.JLabel word1;
    private javax.swing.JLabel word10;
    private javax.swing.JLabel word2;
    private javax.swing.JLabel word3;
    private javax.swing.JLabel word4;
    private javax.swing.JLabel word5;
    private javax.swing.JLabel word6;
    private javax.swing.JLabel word7;
    private javax.swing.JLabel word8;
    private javax.swing.JLabel word9;
    // End of variables declaration//GEN-END:variables
}
